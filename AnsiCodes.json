{
  "$defs": {
    "code_definition": {
      "type": "object",
      "description": "Definition of a single ANSI escape code",
      "required": [
        "id",
        "name",
        "code",
        "type",
        "param_type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z0-9_]+$",
          "description": "Unique identifier for this code (snake_case)"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable name for this code"
        },
        "abbr": {
          "type": "string",
          "description": "Optional abbreviation or short name"
        },
        "code": {
          "type": "string",
          "minLength": 1,
          "description": "The actual ANSI code (without CSI prefix)"
        },
        "type": {
          "type": "string",
          "enum": [
            "sgr",
            "cursor",
            "screen",
            "control",
            "osc"
          ],
          "description": "Category of this ANSI code"
        },
        "param_type": {
          "type": "string",
          "enum": [
            "none",
            "numeric",
            "string",
            "rgb",
            "position",
            "meta"
          ],
          "description": "Type of parameters this code accepts"
        },
        "symbol": {
          "type": "string",
          "maxLength": 1,
          "description": "Optional Unicode symbol representing this code"
        },
        "obsolete": {
          "type": "boolean",
          "default": false,
          "description": "Whether this code is obsolete or deprecated"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of what this code does"
        },
        "examples": {
          "type": "array",
          "description": "Usage examples for this code",
          "items": {
            "$ref": "#/$defs/example"
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "param_type": {
                "const": "none"
              }
            }
          },
          "then": {
            "properties": {
              "examples": {
                "items": {
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "maxItems": 0
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "param_type": {
                "const": "numeric"
              }
            }
          },
          "then": {
            "properties": {
              "examples": {
                "items": {
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "maxItems": 1,
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "param_type": {
                "const": "rgb"
              }
            }
          },
          "then": {
            "properties": {
              "examples": {
                "items": {
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "minItems": 3,
                      "maxItems": 3,
                      "items": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 255
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "param_type": {
                "const": "position"
              }
            }
          },
          "then": {
            "properties": {
              "examples": {
                "items": {
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "minItems": 2,
                      "maxItems": 2,
                      "items": {
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "example": {
      "type": "object",
      "description": "Usage example for an ANSI code",
      "required": [
        "description",
        "output"
      ],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable description of what this example does"
        },
        "parameters": {
          "type": "array",
          "description": "Parameters to pass to the code (if any)",
          "items": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "output": {
          "type": "string",
          "description": "Expected ANSI escape sequence output"
        }
      }
    }
  },
  "$id": "https://github.com/your-org/sgr/ansi-codes.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Schema for ANSI escape codes registry with metadata and examples",
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of the registry format"
    },
    "generated": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp when this registry was generated"
    },
    "code_types": {
      "type": "object",
      "description": "Mapping of code type names to their numeric values",
      "additionalProperties": {
        "type": "integer",
        "minimum": 0
      },
      "properties": {
        "sgr": {
          "type": "integer",
          "const": 0
        },
        "cursor": {
          "type": "integer",
          "const": 1
        },
        "screen": {
          "type": "integer",
          "const": 2
        },
        "control": {
          "type": "integer",
          "const": 3
        },
        "osc": {
          "type": "integer",
          "const": 4
        }
      }
    },
    "param_types": {
      "type": "object",
      "description": "Mapping of parameter type names to their numeric values",
      "additionalProperties": {
        "type": "integer",
        "minimum": 0
      },
      "properties": {
        "none": {
          "type": "integer",
          "const": 0
        },
        "numeric": {
          "type": "integer",
          "const": 1
        },
        "string": {
          "type": "integer",
          "const": 2
        },
        "rgb": {
          "type": "integer",
          "const": 3
        },
        "position": {
          "type": "integer",
          "const": 4
        }
      }
    },
    "codes": {
      "type": "object",
      "description": "Registry of all ANSI escape codes",
      "additionalProperties": {
        "$ref": "#/$defs/code_definition"
      },
      "minProperties": 1
    }
  },
  "required": [
    "version",
    "generated",
    "code_types",
    "param_types",
    "codes"
  ],
  "title": "ANSI Codes Registry",
  "type": "object"
}